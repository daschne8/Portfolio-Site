{"ast":null,"code":"var _jsxFileName = \"/home/daniel/programming/projects/railssite/client/src/containers/projects.js\";\nimport React, { Component } from 'react';\nimport ProjectsBar from '../components/projects_bar';\nimport ProjectCard from '../components/project_card';\nimport * as PJS from \"../data/projects\";\nimport { connect } from \"react-redux\";\nimport { fetchProjects } from '../actions/projectsAction';\n\nclass Projects extends Component {\n  render() {\n    this.props.fetchProjects();\n    console.log(\"projects \", this.props.projects);\n    let projectCards = this.props.projects.map((proj, idx) => React.createElement(ProjectCard, {\n      key: proj.id,\n      id: proj.id,\n      title: proj.title,\n      github: proj.github_url,\n      video: proj.youtube_id,\n      blog: proj.blug_url,\n      about: proj.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"projects-page\",\n      id: \"projects-scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(ProjectsBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"projects-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, projectCards));\n  }\n\n}\n\nconst mapStateToProps = ({\n  projects\n}) => ({\n  projects: projects.projects\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchProjects: () => dispatch(fetchProjects())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","map":{"version":3,"sources":["/home/daniel/programming/projects/railssite/client/src/containers/projects.js"],"names":["React","Component","ProjectsBar","ProjectCard","PJS","connect","fetchProjects","Projects","render","props","console","log","projects","projectCards","map","proj","idx","id","title","github_url","youtube_id","blug_url","description","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,kBAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;;AAGA,MAAMC,QAAN,SAAuBN,SAAvB,CAAgC;AAG9BO,EAAAA,MAAM,GAAE;AACN,SAAKC,KAAL,CAAWH,aAAX;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKF,KAAL,CAAWG,QAApC;AACA,QAAIC,YAAY,GAAG,KAAKJ,KAAL,CAAWG,QAAX,CAAoBE,GAApB,CAAwB,CAACC,IAAD,EAAMC,GAAN,KACzC,oBAAC,WAAD;AACE,MAAA,GAAG,EAAED,IAAI,CAACE,EADZ;AAEE,MAAA,EAAE,EAAEF,IAAI,CAACE,EAFX;AAGE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,MAAA,MAAM,EAAEH,IAAI,CAACI,UAJf;AAKE,MAAA,KAAK,EAAEJ,IAAI,CAACK,UALd;AAME,MAAA,IAAI,EAAEL,IAAI,CAACM,QANb;AAOE,MAAA,KAAK,EAAEN,IAAI,CAACO,WAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB,CAAnB;AAYA,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,YADH,CAFF,CADF;AASD;;AA3B6B;;AA8BhC,MAAMU,eAAe,GAAG,CAAC;AAACX,EAAAA;AAAD,CAAD,MAAgB;AACtCA,EAAAA,QAAQ,EAAEA,QAAQ,CAACA;AADmB,CAAhB,CAAxB;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAI;AACrCnB,EAAAA,aAAa,EAAE,MAAMmB,QAAQ,CAACnB,aAAa,EAAd;AADQ,CAAJ,CAAnC;;AAIA,eAAeD,OAAO,CAACkB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CjB,QAA5C,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport ProjectsBar from '../components/projects_bar'\nimport ProjectCard from '../components/project_card'\nimport * as PJS from \"../data/projects\"\nimport {connect} from \"react-redux\"\nimport {fetchProjects} from '../actions/projectsAction'\n\n\nclass Projects extends Component{\n\n\n  render(){\n    this.props.fetchProjects()\n    console.log(\"projects \", this.props.projects);\n    let projectCards = this.props.projects.map((proj,idx) => (\n      <ProjectCard\n        key={proj.id}\n        id={proj.id}\n        title={proj.title}\n        github={proj.github_url}\n        video={proj.youtube_id}\n        blog={proj.blug_url}\n        about={proj.description}\n        />\n      )\n    )\n    return(\n      <div className=\"projects-page\" id=\"projects-scroll\">\n        <ProjectsBar />\n        <div className=\"projects-holder\">\n          {projectCards}\n\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({projects}) =>({\n  projects: projects.projects\n})\n\nconst mapDispatchToProps = dispatch =>({\n  fetchProjects: () => dispatch(fetchProjects())\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Projects)\n"]},"metadata":{},"sourceType":"module"}